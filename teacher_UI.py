# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'teacher.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtCore import QTimer
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog
from Warning_UI import Ui_Warning
import UI_main as main
import student_UI
import algo_main as algorithm
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(378, 323)
        self.MainWindow=MainWindow
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.Import_teacher = QtWidgets.QPushButton(self.centralwidget)
        self.Import_teacher.setGeometry(QtCore.QRect(70, 240, 221, 41))
        self.Import_teacher.setObjectName("Import_teacher")
        self.list_teacher = QtWidgets.QListWidget(self.centralwidget)
        self.list_teacher.setGeometry(QtCore.QRect(50, 30, 271, 192))
        self.list_teacher.setObjectName("list_teacher")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.Import_teacher.clicked.connect(self.browsefiles)
        self.filename = ("", "")
    @staticmethod
    def get_ui_instance(MainWindow):
        ui = Ui_MainWindow()
        ui.setupUi(MainWindow)
        return ui
    def browsefiles(self):
        filename = QFileDialog.getOpenFileName()
        if filename[0]:
            if filename[0].endswith(".txt"):
                self.list_teacher.addItem(filename[0])
                self.teacher_file=filename[0]
                self.teacher_dict=algorithm.parse_teacher_file(self.teacher_file)
                QTimer.singleShot(7000, self.switch_to_student_ui)
            else:
                self.display_warning()
        else:
            QTimer.singleShot(7000, self.display_warning)
    def display_warning(self):
        self.Warning=QtWidgets.QDialog()
        self.ui=Ui_Warning()
        self.ui.setupUi(self.Warning)
        self.Warning.show()
        self.Warning.exec()
        self.Warning.close()
    def switch_to_student_ui(self):
        self.student_ui=student_UI.Ui_MainWindow()
        self.student_ui.setupUi(self.MainWindow)
        self.MainWindow.show()
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Reference file"))
        self.Import_teacher.setText(_translate("MainWindow", "Import "))
    def file_name(self):
        if self.filename[0]:
            return self.filename[0]
        else:
            main.Open("warning")
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
